/*
Implement light/dark theme related styles in this file

The rules here all overwrite / amend styles coming from Bootstrap's global CSS
Since these are global, theming should also be kept on a global level.
There should be no theming related styles inside of the .vue files' `<style scoped>` tag

It can of course happen that some components change some helper classes on the HTML
to use another color, but these are also global classes and no new CSS is written for them.

The main `them-light` / `theme-dark` class that's cascading is added in the `ui/AppMain.vue` component
*/

.theme-light {
  background: var(--white);
  color: var(--dark);
}

.theme-dark {
  background: var(--dark);
  color: var(--light);
}

/*
Colors taken from:
https://bootswatch.com/darkly/
*/
:root {
  --dark-primary: #375a7f;
  --dark-primary-active-bg: #2c4866;
  --dark-primary-active-border: #29445f;
  --dark-form-control-bg: #222;
  --dark-form-control-border: #222;
  --dark-form-control-border-active: #9badbf;
  --dark-info: #3498db;
  --dark-danger: #e74c3c;
}

.theme-dark .btn-primary,
.theme-dark .btn-primary.disabled,
.theme-dark .btn-primary:disabled {
  color: var(--light);
  background-color: var(--dark-primary);
  border-color: var(--dark-primary);
}

.theme-dark .btn-primary:not(:disabled):not(.disabled):active,
.theme-dark .btn-primary:not(:disabled):not(.disabled).active,
.theme-dark .show > .btn-primary.dropdown-toggle {
  background-color: var(--dark-primary-active-bg);
  border-color: var(--dark-primary-active-border);
}

.theme-dark .form-control {
  background-color: var(--dark-form-control-bg);
  border-color: var(--dark-form-control-border);
  color: var(--light);
}

.theme-dark .form-control:focus {
  border-color: var(--dark-form-control-border-active)
}

.theme-dark .custom-control-input:checked ~ .custom-control-label::before {
  border-color: var(--dark-primary);
  background-color: var(--dark-primary);
}

.theme-dark .btn-outline-primary:not(:disabled):not(.disabled):active,
.theme-dark .btn-outline-primary:not(:disabled):not(.disabled).active,
.theme-dark .show > .btn-outline-primary.dropdown-toggle {
  color: var(--light);
  background-color: var(--dark-primary);
  border-color: var(--dark-primary);
}

.theme-dark .btn-outline-primary:hover {
  color: var(--light);
  background-color: var(--dark-primary);
  border-color: var(--dark-primary);
}

.theme-dark .btn-outline-primary {
  color: var(--dark-primary);
  border-color: var(--dark-primary);
}

.bg-dark-form-control-border {
  background-color: var(--dark-form-control-bg);
}

.theme-dark .custom-select {
  background-color: var(--dark-form-control-bg);
  color: var(--light);
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23f8f9fa' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e");
}

.theme-dark .badge-info {
  background-color: var(--dark-info);
}

.theme-dark .text-primary {
  color: var(--dark-primary) !important;
}

.theme-dark .alert {
  border: none;
}

.theme-dark .alert-danger {
  background-color: var(--dark-danger);
  color: var(--light);
}
